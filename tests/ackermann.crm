($define! ackermann
  ($lambda (m n)
    ($cond ((=? m 0) (+ n 1))
           ((and? (>? m 0) (=? n 0)) (ackermann (- m 1) 1))
           ((and? (>? m 0) (>? n 0)) (ackermann (- m 1) (ackermann m (- n 1)))))))

; faster version of ackermann function for future benchmarking
; purposes. 
;
; implement $vau, $sequence in ocaml to speed up.
;
($define! ack-fast
  ($lambda (m n)
    ($if (=? m 0)
         (+ n 1)
         ($if (>? m 0)
              ($if (=? n 0)
                   (ack-fast (- m 1) 1)
                   ($if (>? n 0)
                        (ack-fast (- m 1) (ack-fast m (- n 1)))
                        #f))
              #f))))

(display (ack-fast 3 4))
(newline)
(display (ack-fast 4 0))
(newline)
(display (ackermann 3 4))
(newline)
(display (ackermann 4 0))
(newline)
(display (ack-fast 3 7))
(newline)
